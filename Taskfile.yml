version: "3"

vars:
  BUILD_DIR: "{{.TASKFILE_DIR}}/build"
  APP_DIR: "{{.TASKFILE_DIR}}/app"
  DOCKER_REGISTRY: "no-registry.local"
  DOCKER_IMAGE: "hello-world"
  DOCKER_TAG: "latest"
  DOCKER_FULL: "{{.DOCKER_REGISTRY}}/{{.DOCKER_IMAGE}}:{{.DOCKER_TAG}}"
  DOCKER_BUILD_ARGS:
  EXPOSED_AT: "3000"
tasks:
  # What to run when calling 'task' without a target
  default:
    desc: "Test and build the application"
    deps:
      - test
      - build
  test:
    desc: "Run unit tests"
    # 'cd' before running cmds
    dir: "{{.APP_DIR}}"
    cmds:
      - "go test . -v"
  build:
    desc: "Build the application binary and copy assets"
    dir: "{{.APP_DIR}}"
    # Suppress used commands from output (still prints command output)
    silent: true
    cmds:
      - 'echo "Ensuring {{.BUILD_DIR}} exists"'
      - 'mkdir -p {{.BUILD_DIR}}'
      - 'echo "Building application ($PWD/main.go) for: $GOOS/$GOARCH (Cgo: $CGO_ENABLED)"'
      - "go build -o {{.BUILD_DIR}}/app main.go"
      - 'echo "Copying assets from ${{.APP_DIR}} to {{.BUILD_DIR}}"'
      - "cp index.html {{.BUILD_DIR}}/index.html"
      - "cp styles.css {{.BUILD_DIR}}/styles.css"
      - 'ls -laR "{{.BUILD_DIR}}"'
      - 'echo "******************************************************"'
      - 'echo "Run in debug mode: {{.BUILD_DIR}}/app"'
      - 'echo "Run in production mode: GIN_MODE=release {{.BUILD_DIR}}/app"'
      - 'echo "******************************************************"'
    # Variables this task takes (from user or other Taskfiles)
    vars:
      GOOS: '{{.GOOS | default "linux"}}'
      GOARCH: '{{.GOARCH | default "amd64"}}'
      CGO_ENABLED: '{{.CGO_ENABLED | default "0"}}'
    # Environment variables to add to cmds. Here we pull the variables.
    env:
      GOOS: "{{.GOOS}}"
      GOARCH: "{{.GOARCH}}"
      CGO_ENABLED: "{{.CGO_ENABLED}}"
    # Source files related to this task. Used for checksumming to skip unnecessary work.
    # (See 'task build --status' before and after running 'task build')
    sources:
      - "{{.APP_DIR}}/*.go"
      - "{{.APP_DIR}}/*.html"
      - "{{.APP_DIR}}/*.css"
    # Same as sources, but for what this task outputs.
    generates:
      - "{{.BUILD_DIR}}/app"
      - "{{.BUILD_DIR}}/index.html"
      - "{{.BUILD_DIR}}/styles.css"
  clean:
    desc: "Delete build artifacts"
    cmds:
      - "rm -r {{.BUILD_DIR}}"
    # Which conditions must be met before running this task?
    preconditions:
      - sh: "test -d {{.BUILD_DIR}}"
        msg: "Build directory does not exist. Nothing to delete."
  docker:
    desc: "Build and run the application in Docker"
    deps:
      - docker-run
  docker-dev:
    desc: "Build and run the application in Docker, using GIN_MODE=debug"
    deps:
      - task: docker-run
        vars:
          GIN_MODE: "debug"
  docker-build:
    desc: "Build the application container"
    cmds:
      - 'docker build --tag {{.DOCKER_FULL}}{{if not (empty .DOCKER_BUILD_ARGS)}} {{.DOCKER_BUILD_ARGS}}{{end}} .'
      - touch {{.BUILD_DIR}}/.docker-task-done
    sources:
      - "Taskfile.yml"
      - "Makefile"
      - "Dockerfile"
      - "{{.APP_DIR}}/*.go"
      - "{{.APP_DIR}}/*.html"
      - "{{.APP_DIR}}/*.css"
    generates:
      - "{{.BUILD_DIR}}/.docker-task-done"
  docker-run:
    desc: "Run the application container. Supports variable GIN_MODE='...'."
    deps: ["docker-build"]
    cmds:
      - 'docker run -p {{.EXPOSED_AT}}:3000{{if not (empty .GIN_MODE)}} -e "GIN_MODE={{.GIN_MODE}}"{{end}} {{.DOCKER_FULL}}'
